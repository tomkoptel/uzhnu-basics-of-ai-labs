<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="uzhnu.edu.toie.hamming.BinaryStringTest" tests="23" skipped="0" failures="0" errors="0" timestamp="2020-04-28T19:30:05" hostname="WRO0023.local" time="0.017">
  <properties/>
  <testcase name="for word 0010" classname="uzhnu.edu.toie.hamming.BinaryStringTest" time="0.002"/>
  <testcase name="for word 11011" classname="uzhnu.edu.toie.hamming.BinaryStringTest" time="0.0"/>
  <testcase name="should calculate parity and data bits at given indexes" classname="uzhnu.edu.toie.hamming.BinaryStringTest" time="0.004"/>
  <testcase name="should encode '1' to '111'" classname="uzhnu.edu.toie.hamming.BinaryStringTest" time="0.001"/>
  <testcase name="should encode '01' to '10011'" classname="uzhnu.edu.toie.hamming.BinaryStringTest" time="0.001"/>
  <testcase name="should encode '11' to '01111'" classname="uzhnu.edu.toie.hamming.BinaryStringTest" time="0.0"/>
  <testcase name="should encode '1001000' to '00110010000'" classname="uzhnu.edu.toie.hamming.BinaryStringTest" time="0.0"/>
  <testcase name="should encode '1100001' to '10111001001'" classname="uzhnu.edu.toie.hamming.BinaryStringTest" time="0.0"/>
  <testcase name="should encode '1101101' to '11101010101'" classname="uzhnu.edu.toie.hamming.BinaryStringTest" time="0.001"/>
  <testcase name="should encode '1101001' to '01101011001'" classname="uzhnu.edu.toie.hamming.BinaryStringTest" time="0.0"/>
  <testcase name="should encode '1101110' to '01101010110'" classname="uzhnu.edu.toie.hamming.BinaryStringTest" time="0.001"/>
  <testcase name="should encode '1100111' to '01111001111'" classname="uzhnu.edu.toie.hamming.BinaryStringTest" time="0.0"/>
  <testcase name="should encode '0100000' to '10011000000'" classname="uzhnu.edu.toie.hamming.BinaryStringTest" time="0.001"/>
  <testcase name="should encode '1100011' to '11111000011'" classname="uzhnu.edu.toie.hamming.BinaryStringTest" time="0.0"/>
  <testcase name="should encode '1101111' to '10101011111'" classname="uzhnu.edu.toie.hamming.BinaryStringTest" time="0.001"/>
  <testcase name="should encode '1100100' to '11111001100'" classname="uzhnu.edu.toie.hamming.BinaryStringTest" time="0.0"/>
  <testcase name="should encode '1100101' to '00111000101'" classname="uzhnu.edu.toie.hamming.BinaryStringTest" time="0.001"/>
  <testcase name="should encode '10011010' to '011100101010'" classname="uzhnu.edu.toie.hamming.BinaryStringTest" time="0.0"/>
  <testcase name="should encode '0' to '000'" classname="uzhnu.edu.toie.hamming.BinaryStringTest" time="0.0"/>
  <testcase name="should encode '00' to '00000'" classname="uzhnu.edu.toie.hamming.BinaryStringTest" time="0.0"/>
  <testcase name="should encode '000' to '000000'" classname="uzhnu.edu.toie.hamming.BinaryStringTest" time="0.0"/>
  <testcase name="should encode '0000' to '0000000'" classname="uzhnu.edu.toie.hamming.BinaryStringTest" time="0.001"/>
  <testcase name="should encode '00000' to '000000000'" classname="uzhnu.edu.toie.hamming.BinaryStringTest" time="0.0"/>
  <system-out><![CDATA[Philosopher 2 696406911067796: Put down left fork. Back to thinking
Philosopher 1 696406911072882: Picked up left fork
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
